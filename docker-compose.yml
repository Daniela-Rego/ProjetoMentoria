version: '3.9'

services:
  db:
    container_name: db_mapasentimento
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: typeorm_mapasentimento_user
      POSTGRES_PASSWORD: 123459
      POSTGRES_DB: postgres_mapasentimento
    ports:
     - "5432:5432" 
    volumes: 
      - db:/postgresql:/var/lib/postgresql/data 
    networks:
      - rabbitmq_go_net  
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: node:20.5.0
    container_name: api_node
    volumes:
      - .:/usr/src/app
    ports:
      - "3000:3000"
    depends_on:
      - db 
      - rabbitmq 
    environment:
      TYPEORM_HOST: db
      TYPEORM_PORT: 5432
      TYPEORM_USERNAME: typeorm_mapasentimento_user
      TYPEORM_PASSWORD: 123459
      TYPEORM_NAME: postgres_mapasentimento
    working_dir: /usr/src/app  
    command: sh -c "npm run typeorm migration:run -- -d src/typeorm/dataSource.ts && npm run start"
    networks:
      - rabbitmq_go_net  

  rabbitmq:
    image: rabbitmq:3.13-management-alpine
    container_name: 'rabbitmq'
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      - "RABBITMQ_DEFAULT_PASS=123456"
      - "RABBITMQ_DEFAULT_USER=fila_user"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5  
    networks:
      - rabbitmq_go_net

networks:
  rabbitmq_go_net:
    driver: bridge
volumes:
  db:
  rabbitmq:    
